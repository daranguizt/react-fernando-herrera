{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","item","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MA+BeA,EA3BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAgBzC,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,uBCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAC7FH,GAFiB,uBAIDI,MAAMF,GAJL,cAIbG,EAJa,gBAKIA,EAAIC,OALR,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,OAA+B,KAAtBF,EAAKE,MAAMpB,OAAgBkB,EAAKE,MAA9C,UAAyDZ,EAAzD,QACPE,IAAKQ,EAAKG,OAAOC,iBAAiBZ,QAXnB,kBAeZM,GAfY,4CAAH,sDCULO,EATK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAChC,OACE,sBAAKc,UAAU,2DAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCsBKO,EAvBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACX,GACtBS,EAAS,CACPf,KAAMM,EACNO,SAAS,SAGZ,CAACpB,IAEGqB,EDNmBI,CAAazB,GAA/BO,EAPwB,EAOxBA,KAAMa,EAPkB,EAOlBA,QAEd,OACE,eAAC,WAAD,WACE,oBAAIJ,UAAU,QAAd,SAAuBhB,IACtBoB,GAAW,2CACZ,qBAAKJ,UAAU,UAAf,SAEIT,EAAKE,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,CAA2BE,MAAOF,EAAKE,MAAOV,IAAKQ,EAAKR,KAAtCQ,EAAKC,aEUpBe,EA3BM,WAAM,MAGWxC,mBAAS,CAAC,kBAHrB,mBAGlByC,EAHkB,KAGN1C,EAHM,KAUzB,OACE,eAAC,WAAD,WACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,qBAAK+B,UAAU,aAAf,SACGW,EAAWlB,KAAI,SAACC,GAAD,OACd,cAAC,EAAD,CAAoBV,SAAUU,GAAhBA,YCnBxBkB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.6e9f77ad.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats, ]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=f2exWXBqB5ynpzLepBpymL3QCjwQ0TGI&q=${encodeURI(\r\n      category\r\n    )}}&limit=10`;\r\n    const res = await fetch(url);\r\n    const { data } = await res.json();\r\n\r\n    const gifs = data.map((item) => {\r\n      return {\r\n        id: item.id,\r\n        title: item.title && item.title.trim() !== '' ? item.title : `${category} GIF`,\r\n        url: item.images.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n    return gifs;\r\n  };","import React, { Fragment } from \"react\";\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce animate__delay-2s\">\r\n      <img src={url} alt={title}></img>\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  //   const [images, setImages] = useState([]);\r\n\r\n  //   useEffect(() => {\r\n  //     getGifs(category).then(setImages);\r\n  //   }, [category]);\r\n\r\n  const { data, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h3 className=\"title\">{category}</h3>\r\n      {loading && <p >Loading...</p>}\r\n      <div className=\"results\">\r\n        {\r\n          data.map((item) => (\r\n            <GifGridItem key={item.id} title={item.title} url={item.url} />\r\n          ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((images) => {\r\n      setState({\r\n        data: images,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { Fragment, useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  //const categories = [\"One Punch Man\", \"Samurai X\", \"Dragon Ball\"];\r\n\r\n  const [categories, setCategories] = useState([\"One Punch Man\"]);\r\n\r\n  //   const handleAdd = () => {\r\n  //     setCategories([...categories, \"Hunter x Hunter\"]);\r\n  //     //setCategories(cat => [...cat, 'Hunter x Hunter']); donde cat es el estado actual\r\n  //   };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      {/* <button onClick={handleAdd}>Agregar</button>*/}\r\n\r\n      <div className=\"allResults\">\r\n        {categories.map((item) => (\r\n          <GifGrid key={item} category={item} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}